{"version":3,"sources":["turbopack:///[project]/HandS/frontend/node_modules/next/navigation.js","turbopack:///[project]/HandS/frontend/app/verify.tsx","turbopack:///[project]/HandS/frontend/app/users/create/page.tsx"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n","\"use client\";\r\nconst API_BASE = \"http://127.0.0.1:8000\";\r\n\r\nexport default async function Verify() {\r\n    const token = sessionStorage.getItem(\"token\");\r\n\r\n    const res = await fetch(`${API_BASE}/verify`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ \"token\": token }),\r\n    });\r\n    if (!res.ok) {\r\n        const refresh_token = sessionStorage.getItem(\"refresh_token\");\r\n        const refreshRes = await fetch(`${API_BASE}/refresh`, {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\"refresh_token\":refresh_token }),\r\n        });\r\n        if (!refreshRes.ok) {\r\n            throw new Error(\"Failed to refresh token\");\r\n        }\r\n        const refreshData = await refreshRes.json();\r\n        sessionStorage.setItem(\"token\", refreshData.access_token);\r\n        return refreshData;\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  }","\"use client\";\r\nimport Link from \"next/link\";\r\nimport { useState, useEffect, use } from \"react\";\r\nimport Verify from \"../../verify\";\r\n\r\nimport { useRouter } from \"next/navigation\";\r\nimport { verify } from \"crypto\";\r\n\r\nconst API_BASE = \"http://127.0.0.1:8000\";\r\n\r\nexport default function Users() {\r\n    const router = useRouter();\r\n    const [users, setUsers] = useState([] as any[]);\r\n\r\n    async function checkVerify() {\r\n            const verifyResult = await Verify();\r\n            if (verifyResult.role !== \"admin\") {\r\n                alert(\"관리자만 접근할 수 있습니다.\");\r\n                router.push(\"/\");\r\n            }\r\n        }\r\n    useEffect(() => {\r\n        checkVerify();\r\n    }, []);\r\n\r\n    function createUser(id: string, password: string, username: string, email: string) {\r\n        fetch(`${API_BASE}/user/create`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ id, password, username, email }),\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(\"Network response was not ok\");\r\n                }\r\n                return response.json();\r\n            })\r\n            .then(() => {\r\n                setUsers((prevUsers) => prevUsers.filter((user) => user.id !== id));\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting user:\", error);\r\n            });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"p-8\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Create User</h1>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    const form = e.target as HTMLFormElement;\r\n                    const id = (form.elements.namedItem(\"id\") as HTMLInputElement).value;\r\n                    const password = (form.elements.namedItem(\"password\") as HTMLInputElement).value;\r\n                    const username = (form.elements.namedItem(\"username\") as HTMLInputElement).value;\r\n                    const email = (form.elements.namedItem(\"email\") as HTMLInputElement).value;\r\n                    createUser(id, password, username, email);\r\n                }}\r\n                className=\"space-y-4\"\r\n            >\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">ID</label>\r\n                    <input  \r\n                        type=\"text\"\r\n                        name=\"id\"\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"mt-4 bg-blue-500 text-white py-2 px-4 rounded-md\"\r\n                >\r\n                    Create User\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}